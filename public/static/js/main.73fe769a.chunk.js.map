{"version":3,"sources":["TopBar.js","Sidebar.js","InventoryListChild.js","InventoryList.js","WarehouseChild.js","Modal.js","Warehouses.js","ProductDetail.js","App.js","serviceWorker.js","index.js"],"names":["TopBar","react_default","a","createElement","className","type","id","name","placeholder","src","alt","Component","Sidebar","Link","to","InventoryListChild","_this","this","concat","props","productId","productName","productDesc","productLastOrdered","productLocation","productQuantity","productStatus","onClick","delInvItemFunction","delInvItem","React","baseUrl","inventoryListPath","InventoryList","state","inventory","currentId","fetch","method","then","response","json","data","setState","catch","err","console","log","_this2","warehouseId","_this3","inventoryArray","map","index","InventoryListChild_InventoryListChild","inventoryState","key","productWarehouseId","warehouse_id","short_description","last_ordered","productOrderedBy","productRefNum","refNum","productCategory","category","quantity","location","status","WarehouseChild","wareId","wareAddress","wareCity","wareCountry","warePostalCode","wareManager","warePhone","wareMail","wareType","countryName","require","getNames","Modal","warehouseName","createRef","street","city","country","postalCode","managerName","phone","email","inventoryType","handleClose","e","idMaker","fetchRequest","submitHandler","preventDefault","current","value","length","alert","body","address_street","postal_code","manager_name","phone_num","headers","Content-Type","JSON","stringify","style","Object","objectSpread","flex","display","isOpen","modalLayer","formModal","onSubmit","ref","i","position","justifyContent","alignItems","width","height","zIndex","overflow","backgroundColor","top","left","color","maxWidth","maxHeight","borderRadius","flexDirection","warehousesPath","Warehouses","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","warehouses","bind","assertThisInitialized","prevProps","prevState","warehouseList","WarehouseChild_WarehouseChild","wareState","src_Modal","ProductDetail","inventoryObject","targetId","baseURL","error","prodObj","description","ordered_by","App","BrowserRouter","src_Sidebar","TopBar_TopBar","Switch","Route","path","exact","component","render","InventoryList_InventoryList","match","params","ProductDetail_ProductDetail","Redirect","Boolean","window","hostname","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iOAEqBA,0LAGZ,OACDC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBACZH,EAAAC,EAAAC,cAAA,SACIC,UAAU,2BACVC,KAAK,OACLC,GAAG,iBACHC,KAAK,SACLC,YAAY,WAEhBP,EAAAC,EAAAC,cAAA,OAAKM,IAAI,6BAA6BL,UAAU,yBAChDM,IAAI,WAERT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKM,IAAI,8BAA8BL,UAAU,4BACjDM,IAAI,UACJT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,OAAKM,IAAI,+BAA+BL,UAAU,qCAClDM,IAAI,oBArBYC,sBCiCrBC,mLA9BN,OACGX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACPH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAI,IAAKV,UAAU,wBACrBH,EAAAC,EAAAC,cAAA,OAAKM,IAAI,kCAAkCL,UAAU,gCACrDM,IAAI,cAGZT,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBACZH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,OAAKM,IAAI,gCAAgCL,UAAU,sBACnDM,IAAI,YACJT,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAI,aAAcV,UAAU,yBAHtC,aAKAH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,OAAKM,IAAI,+BAA+BL,UAAU,sBAClDM,IAAI,YACJT,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAI,cAAeV,UAAU,yBAHvC,aAKAH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,OAAKM,IAAI,2BAA2BL,UAAU,sBAC9CM,IAAI,YAFR,UAKJT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAAf,uBA1BEO,aCADI,mLAER,IAAAC,EAAAC,KAEL,OACIhB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,wCAAAc,OAA0CD,KAAKE,MAAMf,YAC/DH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACXH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAI,cAAgBG,KAAKE,MAAMC,WAAWnB,EAAAC,EAAAC,cAAA,MAAKC,UAAU,gCAAgCa,KAAKE,MAAME,cAC1GpB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qCAAqCa,KAAKE,MAAMG,cAElErB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,6BAA6Ba,KAAKE,MAAMI,qBAE1DtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gDACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sCAAsCa,KAAKE,MAAMK,kBAEnEvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kDACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wCAAwCa,KAAKE,MAAMM,kBAErExB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oDACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAiCa,KAAKE,MAAMO,iBAGlEzB,EAAAC,EAAAC,cAAA,UAAQwB,QAAS,kBAAMX,EAAKG,MAAMS,mBAAmBZ,EAAKG,MAAMU,aAC/DzB,UAAU,uCADX,aAxBgC0B,IAAMnB,WCChDoB,EAAU,wBACVC,EAAoB,aAELC,6MAGjBC,MAAQ,CACJC,UAAW,MA+BfP,mBAAqB,SAACQ,GAMlBC,MAAMN,EAAUC,EAAoB,IAAOI,EAJ9B,CACTE,OAAQ,WAIXC,KAAK,SAACC,GACH,OAAOA,EAASC,SAEnBF,KAAK,SAACG,GACH,OAAO1B,EAAK2B,SAAS,CAACR,UAAWO,MAEpCE,MAAO,SAACC,GACLC,QAAQC,IAAIF,yFAzCA,IAAAG,EAAA/B,KACXgC,EAAchC,KAAKE,MAAM8B,YAC1BA,EAEAZ,MAAK,GAAAnB,OAAIa,EAAJ,gBAAAb,OAA0B+B,IAC9BV,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAI,OAAIM,EAAKL,SAAS,CAACR,UAAUO,MACtCE,MAAM,SAAAC,GAAQC,QAAQC,IAAIF,KAK/BR,MAAMN,EAAUC,GACZO,KAAK,SAACC,GACH,OAAOA,EAASC,SAEnBF,KAAK,SAACG,GAEH,OAAOM,EAAKL,SAAS,CAACR,UAAWO,MAEpCE,MAAO,SAACC,GACLC,QAAQC,IAAIF,sCAyBd,IAAAK,EAAAjC,KAEDkC,EAAiBlC,KAAKiB,MAAMC,UAEhC,OACIlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,wBAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,sBAGRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,mBAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACXH,EAAAC,EAAAC,cAAA,2BAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACXH,EAAAC,EAAAC,cAAA,uBAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACXH,EAAAC,EAAAC,cAAA,uBAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,sBAGRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAGlB+C,EAAeC,IAAI,SAACjB,EAAWkB,GAC5B,OAAOpD,EAAAC,EAAAC,cAACmD,EAAD,CACClC,UAAWe,EAAU7B,GACrBiD,eAAgBL,EAAKhB,MAAMC,UAC3BqB,IAAKH,EACLjD,UAAYiD,EAAQ,IAAM,EAAK,QAAU,OACzChC,YAAac,EAAU5B,KACvBkD,mBAAoBtB,EAAUuB,aAC9BpC,YAAaa,EAAUwB,kBACvBpC,mBAAoBY,EAAUyB,aAC9BC,iBAAkB1B,EAAU,cAC5B2B,cAAe3B,EAAU4B,OACzBC,gBAAiB7B,EAAU8B,SAC3BxC,gBAAiBU,EAAU+B,SAC3B1C,gBAAiBW,EAAUgC,SAC3BzC,cAAeS,EAAUiC,OACzBxC,mBAAoBsB,EAAKtB,mBACzBC,WAAYM,EAAU7B,gBA3GXwB,IAAMnB,mBCL5B0D,mLAGb,OACApE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBACb,oBACAa,KAAKE,MAAMmD,QAEZrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+BAAd,WAEAH,EAAAC,EAAAC,cAAA,WACKc,KAAKE,MAAMoD,aAEhBtE,EAAAC,EAAAC,cAAA,WACKc,KAAKE,MAAMqD,SADhB,IAC2B,KAD3B,IACkCvD,KAAKE,MAAMsD,aAE7CxE,EAAAC,EAAAC,cAAA,WACKc,KAAKE,MAAMuD,iBAIpBzE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+BAAd,WAEAH,EAAAC,EAAAC,cAAA,WACCc,KAAKE,MAAMwD,YAAa,uBAEzB1E,EAAAC,EAAAC,cAAA,eAAOc,KAAKE,MAAMyD,UAAlB,KACA3E,EAAAC,EAAAC,cAAA,eAAOc,KAAKE,MAAM0D,SAAlB,MAGJ5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+BAAd,mBAEAH,EAAAC,EAAAC,cAAA,WACCc,KAAKE,MAAM2D,oBAtCYhD,IAAMnB,mBCE9CoE,EADgBC,EAAQ,IACEC,WA4IfC,6MAzIXC,cAAgBrD,IAAMsD,cACtBC,OAASvD,IAAMsD,cACfE,KAAOxD,IAAMsD,cACbG,QAAUzD,IAAMsD,cAChBI,WAAa1D,IAAMsD,cACnBK,YAAc3D,IAAMsD,cACpBM,MAAQ5D,IAAMsD,cACdO,MAAQ7D,IAAMsD,cACdQ,cAAgB9D,IAAMsD,cAGtBS,YAAc,SAACC,GACX9E,EAAKG,MAAM0E,iBAGfE,QAAU,SAACD,GACP9E,EAAKG,MAAM4E,aAGfC,aAAe,SAACF,GACZ9E,EAAKG,MAAM6E,kBAGfC,cAAgB,SAACH,GACb,IAAIX,EAAcE,EAAOC,EAAKC,EAAQC,EAAWC,EAAYC,EAAMC,EAAMC,EAEzEE,EAAEI,iBAC0C,IAA5ClF,EAAKmE,cAAcgB,QAAQC,MAAMC,OAAeC,MAAM,yBAA2BnB,EAAgBnE,EAAKmE,cAAcgB,QAAQC,MACvF,IAArCpF,EAAKqE,OAAOc,QAAQC,MAAMC,OAAeC,MAAM,sBAAuBjB,EAASrE,EAAKqE,OAAOc,QAAQC,MAChE,IAAnCpF,EAAKsE,KAAKa,QAAQC,MAAMC,OAAeC,MAAM,oBAAqBhB,EAAOtE,EAAKsE,KAAKa,QAAQC,MACrD,IAAtCpF,EAAKuE,QAAQY,QAAQC,MAAMC,OAAeC,MAAM,qBAAsBf,EAAUvE,EAAKuE,QAAQY,QAAQC,MAC5D,IAAzCpF,EAAKwE,WAAWW,QAAQC,MAAMC,OAAeC,MAAM,sBAAuBd,EAAaxE,EAAKwE,WAAWW,QAAQC,MACrE,IAA1CpF,EAAKyE,YAAYU,QAAQC,MAAMC,OAAeC,MAAM,yBAA0Bb,EAAczE,EAAKyE,YAAYU,QAAQC,MACjF,IAApCpF,EAAK0E,MAAMS,QAAQC,MAAMC,OAAeC,MAAM,uBAAwBZ,EAAQ1E,EAAK0E,MAAMS,QAAQC,MAC7D,IAApCpF,EAAK2E,MAAMQ,QAAQC,MAAMC,OAAeC,MAAM,wBAAyBX,EAAQ3E,EAAK2E,MAAMQ,QAAQC,MACtD,IAA5CpF,EAAK4E,cAAcO,QAAQC,MAAMC,OAAeC,MAAM,yBAA0BV,EAAgB5E,EAAK4E,cAAcO,QAAQC,MAC3H,IAAM9F,EAAKU,EAAKG,MAAM4E,QAEhBQ,EAAO,CACTpB,cAAeA,EACfqB,eAAgBnB,EAChBC,KAAMA,EACNC,QAASA,EACTkB,YAAYjB,EACZkB,aAAcjB,EACdkB,UAAWjB,EACXC,MAAOA,EACPtF,KAAMuF,EACNlC,aAAcpD,GAIlB+B,MAAK,GAAAnB,OAFW,wBAEX,gBAAAA,OAA0BZ,GAAM,CAEjCgC,OAAO,OACPsE,QAAQ,CAACC,eAAgB,oBACzBN,KAAMO,KAAKC,UAAUR,KAGzBvF,EAAKG,MAAM0E,uFAIX,OACI5F,EAAAC,EAAAC,cAAA,OAAK6G,MAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAME,EAAN,CAAYC,QAASnG,KAAKE,MAAMkG,OAAS,OAAS,UACxDpH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcuB,QAASV,KAAKE,MAAM0E,YAAamB,MAAOM,GACjErH,EAAAC,EAAAC,cAAA,OAAKM,IAAI,0BAA0BC,IAAI,WAC3CT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB4G,MAAOO,GACnCtH,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAYoH,SAAUvG,KAAKgF,eACvChG,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAjB,iBAEIH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBC,KAAK,OAAOE,KAAK,qBAAqBkH,IAAKxG,KAAKkE,iBAExFlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAf,UAEIH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAjB,uBAEIH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBC,KAAK,OAAOE,KAAK,cAAckH,IAAKxG,KAAKoE,UAEjFpF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAjB,OAEIH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBC,KAAK,OAAOE,KAAK,YAAYkH,IAAKxG,KAAKqE,QAE/ErF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAjB,UAEIH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAmBG,KAAK,UAAUkH,IAAKxG,KAAKsE,SAErDR,EAAY3B,IAAI,SAACmC,EAAQmC,GACtB,OACAzH,EAAAC,EAAAC,cAAA,UAAQqD,IAAKkE,GACPnC,OAOtBtF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAjB,cAEIH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBC,KAAK,OAAOE,KAAK,kBAAkBkH,IAAKxG,KAAKuE,eAGzFvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAAf,sBAEIH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAjB,2BAEIH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBC,KAAK,OAAOE,KAAK,mBAAmBkH,IAAKxG,KAAKwE,eAEtFxF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAjB,eAEIH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBC,KAAK,OAAOE,KAAK,aAAakH,IAAKxG,KAAKyE,SAEhFzF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAjB,gBAEIH,EAAAC,EAAAC,cAAA,SAAQC,UAAU,mBAAmBC,KAAK,OAAOE,KAAK,aAAakH,IAAKxG,KAAK0E,SAEjF1F,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAjB,iBAEIH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBC,KAAK,OAAOE,KAAK,qBAAqBkH,IAAKxG,KAAK2E,mBAIhG3F,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAoBC,KAAK,SAAS+F,MAAM,4BA7H7DtE,IAAMnB,WA4IpBwG,EAAO,CACTQ,SAAU,QACVP,QAAS,OACTQ,eAAgB,SAChBC,WAAY,SACZC,MAAO,QACPC,OAAQ,QACRC,OAAQ,EACRC,SAAU,SACVC,gBAAiB,qBACjBC,IAAK,IACLC,KAAK,KAGHd,EAAa,CACfK,SAAU,QACVG,MAAO,QACPC,OAAQ,QACRC,OAAQ,EACRE,gBAAiB,cACjBC,IAAK,IACLC,KAAK,KAGDb,EAAY,CAChBI,SAAU,WACVU,MAAO,gBACPH,gBAAiB,UACjBJ,MAAO,QACPQ,SAAU,OACVP,OAAQ,QACRQ,UAAW,OACXP,OAAQ,EACRQ,aAAc,MACdP,SAAU,OACVb,QAAS,OACTqB,cAAe,UClLb1G,EAAU,wBACV2G,EAAiB,cAEFC,cACjB,SAAAA,IAAa,IAAA3H,EAAA,OAAAiG,OAAA2B,EAAA,EAAA3B,CAAAhG,KAAA0H,IACT3H,EAAAiG,OAAA4B,EAAA,EAAA5B,CAAAhG,KAAAgG,OAAA6B,EAAA,EAAA7B,CAAA0B,GAAAI,KAAA9H,QAaJ4E,YAAc,SAACC,GACX9E,EAAK2B,SAAS,CAAC0E,QAAUrG,EAAKkB,MAAMmF,UAf3BrG,EAkBb+E,QAAU,SAACD,GACP,OAAO9E,EAAKkB,MAAM8G,WAAW3C,OAAO,GAnB3BrF,EAsBbgF,aAAe,SAACF,GACZzD,MAAMN,EAAU2G,GACfnG,KAAK,SAACC,GACH,OAAOA,EAASC,SAEnBF,KAAK,SAACG,GACH,OAAO1B,EAAK2B,SAAS,CAACqG,WAAYtG,MAErCE,MAAO,SAACC,GACLC,QAAQC,IAAIF,MA5BhB7B,EAAKkB,MAAQ,CACT8G,WAAY,GACZ3B,QAAQ,GAGZrG,EAAK6E,YAAc7E,EAAK6E,YAAYoD,KAAjBhC,OAAAiC,EAAA,EAAAjC,QAAAiC,EAAA,EAAAjC,CAAAjG,KACnBA,EAAK+E,QAAU/E,EAAK+E,QAAQkD,KAAbhC,OAAAiC,EAAA,EAAAjC,QAAAiC,EAAA,EAAAjC,CAAAjG,KACfA,EAAKgF,aAAehF,EAAKgF,aAAaiD,KAAlBhC,OAAAiC,EAAA,EAAAjC,QAAAiC,EAAA,EAAAjC,CAAAjG,KAVXA,iFAmCKmI,EAAWC,GACzBnI,KAAK+E,eACL/E,KAAK8E,qDAGUoD,EAAWC,GAEvBA,EAAUJ,aAAe/H,KAAKiB,MAAM8G,YAEnC/H,KAAK+E,gDAIJ,IAAAhD,EAAA/B,KAEDoI,EAAgBpI,KAAKiB,MAAM8G,WAE/B,OAEJ/I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAd,aAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCAAf,WAIJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACViJ,EAAcjG,IAAI,SAAC4F,EAAY3F,GAC5B,OAAOpD,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAM2C,IAAKH,EAAOvC,GAAE,eAAAI,OAAiB8H,EAAWtF,eACnDzD,EAAAC,EAAAC,cAACmJ,EAAD,CACIC,UAAWvG,EAAKd,MAAM8G,WACtBxF,IAAKH,EACLiB,OAAQ0E,EAAWtF,aACnBc,SAAUwE,EAAW1D,KACrBb,YAAauE,EAAWzD,QACxBhB,YAAayE,EAAWxC,eACxB9B,eAAgBsE,EAAWvC,YAC3B9B,YAAaqE,EAAWtC,aACxB9B,UAAWoE,EAAWrC,UACtB7B,SAAUkE,EAAW3I,KACrBwE,SAAUmE,EAAWrD,YAQrC1F,EAAAC,EAAAC,cAACqJ,EAAD,CAAO3D,YAAe5E,KAAK4E,YACnBwB,OAAQpG,KAAKiB,MAAMmF,OACnBtB,QAAS9E,KAAK8E,UAEdC,aAAgB/E,KAAK+E,eAE7B/F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,OAAKM,IAAI,wBAAwBC,IAAI,aAAaiB,QAAUV,KAAK4E,uBA7FrC/D,IAAMnB,WCJzB8I,6MAGbvH,MAAQ,CACJwH,gBAAiB,qFAGFP,EAAWC,GAAW,IAAApG,EAAA/B,KAC/B0I,EAAW1I,KAAKE,MAAMC,UAI5BiB,MAAOuH,mCAAqBD,GAC3BpH,KAAM,SAACC,GACJ,OAAOA,EAASC,SACjBF,KAAK,SAACG,GAELM,EAAKL,SAAS,CACV+G,gBAAiBhH,MAEtBE,MAAM,SAACC,GACNC,QAAQ+G,MAAM,+CAAgDhH,sCAUtE,IAAIiH,EAAU7I,KAAKiB,MAAMwH,gBAGzB,OAEIzJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAI,cAAcb,EAAAC,EAAAC,cAAA,OAAKM,IAAI,iCAAiCC,IAAI,eAAtE,2BAGRT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACV0J,EAAQvJ,MAEbN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,2BAGRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,4BADJ,IAC+B2J,EAAQC,aAEvC9J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACfH,EAAAC,EAAAC,cAAA,6BADA,KAC6B2J,EAAQlG,cAErC3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACfH,EAAAC,EAAAC,cAAA,2BADA,KAC2B2J,EAAQE,YAGnC/J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACfH,EAAAC,EAAAC,cAAA,iCADA,KACiC2J,EAAQ/F,QAGzC9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACfH,EAAAC,EAAAC,cAAA,iCADA,KACiC2J,EAAQ7F,UAGzChE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACfH,EAAAC,EAAAC,cAAA,yBADA,KACyB2J,EAAQ5F,UAGjCjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACfH,EAAAC,EAAAC,cAAA,yBADA,KACyB2J,EAAQ3F,UAGjClE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACfH,EAAAC,EAAAC,cAAA,uBADA,IACsB2J,EAAQ1F,kBA/EXtC,IAAMnB,2CCM5BsJ,mLAEjB,OACAhK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,KAEIjK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACbH,EAAAC,EAAAC,cAACgK,EAAD,MAEFlK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACbH,EAAAC,EAAAC,cAACiK,EAAD,MACAnK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACfH,EAAAC,EAAAC,cAACkK,EAAA,EAAD,KACIpK,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAOC,KAAK,cAAcC,OAAK,EAACC,UAAW9B,IAC3C1I,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAOC,KAAK,aAAaC,OAAK,EAACC,UAAWxI,IAC1ChC,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAOC,KAAK,kBAAkBC,OAAK,EAACE,OAAS,SAACvJ,GAAY,OAAOlB,EAAAC,EAAAC,cAACwK,EAAD,CAAe1H,YAAa9B,EAAMyJ,MAAMC,OAAOvK,QAChHL,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAOC,KAAK,iBAAiBC,OAAK,EAACE,OAAS,SAACvJ,GAAY,OAAOlB,EAAAC,EAAAC,cAAC2K,EAAD,CAAe1J,UAAWD,EAAMyJ,MAAMC,OAAOvK,QAC7GL,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAOE,OAAK,EAACD,KAAK,IAAIG,OAAQ,kBAAKzK,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,CAAUjK,GAAG,gCAjB/BH,aCGbqK,QACW,cAA7BC,OAAO9G,SAAS+G,UAEe,UAA7BD,OAAO9G,SAAS+G,UAEhBD,OAAO9G,SAAS+G,SAASN,MACvB,2DCZNO,IAAST,OAAOzK,EAAAC,EAAAC,cAACiL,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlJ,KAAK,SAAAmJ,GACjCA,EAAaC","file":"static/js/main.73fe769a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class TopBar extends Component {\r\n\r\n    render() {\r\n         return (\r\n        <div className=\"topbar\">\r\n            <form className=\"topbar__searchBox\">\r\n                <input\r\n                    className=\"topbar__searchBox--input\"\r\n                    type=\"text\"\r\n                    id=\"inputSearchBox\"\r\n                    name=\"Search\"\r\n                    placeholder=\"Search\" \r\n                />\r\n                <img src=\"../Assets/Icons/Search.svg\" className=\"topbar__searchBox--img\"\r\n                alt='myImg'/>\r\n            </form>\r\n            <div className=\"topbar__rightBox\">\r\n                <img src=\"../Assets/Avatar/Avatar.jpg\" className=\"topbar__rightBox--userImg\"\r\n                alt='myImg'/>\r\n                <div className=\"topbar__rightBox--optionForm\">\r\n                    <img src=\"../Assets/Icons/Dropdown.svg\" className=\"topbar__rightBox--optionForm__icon\"\r\n                    alt='myImg'/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n         )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Sidebar extends Component {\r\n    render() {\r\n         return (\r\n            <div className=\"sidebar\">\r\n                    <label>\r\n                        <Link to={'/'} className=\"sidebar__LogoLinkBox\">\r\n                            <img src=\"../Assets/wordmark/wordmark.svg\" className=\"sidebar__LogoLinkBox--topLogo\"\r\n                            alt='linkImg'/>\r\n                        </Link>\r\n                    </label>\r\n                    <form className=\"sidebar__links\">\r\n                        <label className=\"sidebar__links--label\">\r\n                            <img src=\"../Assets/Icons/Inventory.svg\" className=\"sidebar__links--img\"\r\n                            alt='linkImg'/>\r\n                            <Link to={'/inventory'} className=\"sidebar__links--link\" />\r\n                        Inventory</label>\r\n                        <label className=\"sidebar__links--label\">\r\n                            <img src=\"../Assets/Icons/Location.svg\" className=\"sidebar__links--img\"\r\n                            alt='linkImg'/>\r\n                            <Link to={'/warehouses'} className=\"sidebar__links--link\" />\r\n                        Locations</label>\r\n                        <label className=\"sidebar__links--label\">\r\n                            <img src=\"../Assets/Icons/User.svg\" className=\"sidebar__links--img\"\r\n                            alt='linkImg'/>\r\n                        Users</label>\r\n                    </form>\r\n                    <div className=\"sidebar__bottomVersionText\">Version 1.0</div>\r\n            </div>\r\n         )\r\n    }\r\n}\r\n\r\nexport default Sidebar;\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class InventoryListChild extends React.Component {\r\n\r\n    render() { \r\n\r\n        return (\r\n            <div className={`inventoryList__form--product-details ${this.props.className}`}>\r\n                <div className=\"inventoryList__form--product-details-group\">\r\n                    <div className=\"inventoryList__form--product-name-container\">\r\n                        <Link to={'/inventory/' + this.props.productId}><h3  className=\"inventoryList__form--product\">{this.props.productName}</h3></Link>\r\n                        <h3 className=\"inventoryList__form--product-desc\">{this.props.productDesc}</h3>\r\n                    </div>\r\n                    <div className=\"inventoryList__form--date-container\">\r\n                        <h3 className=\"inventoryList__form--date\">{this.props.productLastOrdered}</h3>\r\n                    </div>\r\n                    <div className=\"inventoryList__form--city-province-container\">\r\n                        <h3 className=\"inventoryList__form--city-province\">{this.props.productLocation}</h3>\r\n                    </div>\r\n                    <div className=\"inventoryList__form--quantity-number-container\">\r\n                        <h3 className=\"inventoryList__form--quantity-number\">{this.props.productQuantity}</h3>\r\n                    </div>\r\n                    <div className=\"inventoryList__form--quantity-in-stock-container\">\r\n                        <h3 className=\"inventoryList__form--in-stock\">{this.props.productStatus}</h3>\r\n                    </div>\r\n                </div>\r\n                <button onClick={() => this.props.delInvItemFunction(this.props.delInvItem)}\r\n                 className=\"inventoryList__form--delete-product\">x</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport InventoryListChild from './InventoryListChild';\r\n\r\n/* setup const for baseUrl and inventory path */\r\nconst baseUrl = 'http://localhost:8080';\r\nconst inventoryListPath = '/inventory';\r\n\r\nexport default class InventoryList extends React.Component {\r\n    \r\n    // Monitor State\r\n    state = {\r\n        inventory: []\r\n    }\r\n\r\n    // Fetch all inventory list once component mounts:\r\n    componentDidMount() {\r\n       const warehouseId = this.props.warehouseId;\r\n        if (warehouseId)\r\n        {\r\n            fetch(`${baseUrl}/warehouses/${warehouseId}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({inventory:data}))\r\n            .catch(err => {console.log(err)});\r\n        }\r\n\r\n        else\r\n        {\r\n        fetch(baseUrl + inventoryListPath)\r\n           .then((response) => {\r\n               return response.json();\r\n           })\r\n           .then((data) => {\r\n\r\n               return this.setState({inventory: data})\r\n           })\r\n           .catch( (err) => {\r\n               console.log(err);\r\n           })\r\n        }\r\n    }\r\n\r\n    // Function that sends DELETE to the backend, and receives an updated inventory list in json, and then updates state\r\n    delInvItemFunction = (currentId) => {\r\n\r\n        const init = {\r\n            method: \"DELETE\"\r\n        };\r\n\r\n        fetch(baseUrl + inventoryListPath + '/' + (currentId), init)\r\n        .then((response) => {\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n            return this.setState({inventory: data})\r\n        })\r\n        .catch( (err) => {\r\n            console.log(err);\r\n        })\r\n\r\n}\r\n\r\n    render() {\r\n      \r\n        let inventoryArray = this.state.inventory;\r\n        \r\n        return (\r\n            <div className=\"inventoryList__container\">\r\n                <div className=\"inventoryList--heading-container\">\r\n                    <div className=\"inventoryList--heading\">\r\n                        <h1>Inventory</h1>\r\n                    </div>\r\n                    <div className=\"inventoryList--filter\">\r\n                        <h2>Filter</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"inventoryList--main-container\">\r\n                    <div className=\"inventoryList__form--product-heading\">\r\n                        <div className=\"inventoryList__form--product-heading-group\"> \r\n                            <div className=\"inventoryList__form--item\">\r\n                                <h3>ITEM</h3>\r\n                            </div>\r\n                            <div className=\"inventoryList__form--lastOrdered\">\r\n                                <h3>LAST ORDERED</h3>\r\n                            </div>\r\n                            <div className=\"inventoryList__form--location\">\r\n                                <h3>LOCATION</h3>\r\n                            </div>\r\n                            <div className=\"inventoryList__form--quantity\">\r\n                                <h3>QUANTITY</h3>\r\n                            </div>\r\n                            <div className=\"inventoryList__form--status\">\r\n                                <h3>STATUS</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"spaceBlock\"></div>   \r\n                    </div>\r\n                    {/* PRODUCT DETAILS RECEIVED AS PROPS FROM PARENT */}    \r\n                    {inventoryArray.map((inventory, index) => {\r\n                        return <InventoryListChild \r\n                                productId={inventory.id}\r\n                                inventoryState={this.state.inventory}\r\n                                key={index}\r\n                                className={(index % 2 === 1) ? \"white\" : \"grey\"}\r\n                                productName={inventory.name}\r\n                                productWarehouseId={inventory.warehouse_id}\r\n                                productDesc={inventory.short_description}\r\n                                productLastOrdered={inventory.last_ordered}\r\n                                productOrderedBy={inventory[\"ordered by\"]}\r\n                                productRefNum={inventory.refNum}\r\n                                productCategory={inventory.category}\r\n                                productQuantity={inventory.quantity}\r\n                                productLocation={inventory.location}\r\n                                productStatus={inventory.status}\r\n                                delInvItemFunction={this.delInvItemFunction}\r\n                                delInvItem={inventory.id}\r\n                            />\r\n                        })    \r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class WarehouseChild extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"warehouseBox\">\r\n            <h3 className=\"warehouseBox__upper\">\r\n            {'Warehouse Number '}\r\n            {this.props.wareId}\r\n            </h3>\r\n            <div className=\"warehouseBox__lower\">\r\n                <div className=\"warehouseBox__lower--leftContainer\">\r\n                    <h4 className=\"warehouseBox__lower--header\">ADDRESS</h4>\r\n\r\n                    <div>\r\n                        {this.props.wareAddress}\r\n                    </div>\r\n                    <div>\r\n                        {this.props.wareCity} {', '} {this.props.wareCountry}\r\n                    </div>\r\n                    <div>\r\n                        {this.props.warePostalCode}\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"warehouseBox__lower--centralContainer\">\r\n                    <h4 className=\"warehouseBox__lower--header\">CONTACT</h4>\r\n\r\n                    <div>\r\n                    {this.props.wareManager}{', Warehouse Manager'}\r\n                    </div>\r\n                    <div> {this.props.warePhone} </div>\r\n                    <div> {this.props.wareMail} </div>\r\n                    \r\n                </div>\r\n                <div className=\"warehouseBox__lower--rightContainer\">\r\n                    <h4 className=\"warehouseBox__lower--header\">INVENTORY TYPE:</h4>\r\n\r\n                    <div>\r\n                    {this.props.wareType}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst countryList = require('country-list');\r\nlet countryName = countryList.getNames();\r\n\r\nclass Modal extends React.Component {\r\n    warehouseName = React.createRef();\r\n    street = React.createRef();\r\n    city = React.createRef();\r\n    country = React.createRef();\r\n    postalCode = React.createRef();\r\n    managerName = React.createRef();\r\n    phone = React.createRef();\r\n    email = React.createRef();\r\n    inventoryType = React.createRef();\r\n    \r\n    \r\n    handleClose = (e) => {\r\n        this.props.handleClose();\r\n    }\r\n\r\n    idMaker = (e) => {\r\n        this.props.idMaker();\r\n    }\r\n\r\n    fetchRequest = (e) => {\r\n        this.props.fetchRequest();\r\n    }\r\n    \r\n    submitHandler = (e) =>{\r\n        let warehouseName,street,city,country,postalCode,managerName,phone,email,inventoryType;\r\n\r\n        e.preventDefault();\r\n        this.warehouseName.current.value.length === 0 ? alert('Enter warehouse name!'):  warehouseName = this.warehouseName.current.value;\r\n        this.street.current.value.length === 0 ? alert('Enter street name!'): street = this.street.current.value;\r\n        this.city.current.value.length === 0 ? alert('Enter city name!'): city = this.city.current.value;\r\n        this.country.current.value.length === 0 ? alert('Select a country!'): country = this.country.current.value;\r\n        this.postalCode.current.value.length === 0 ? alert('Enter postal code!'): postalCode = this.postalCode.current.value;\r\n        this.managerName.current.value.length === 0 ? alert(\"Enter mananger's name\"): managerName = this.managerName.current.value;\r\n        this.phone.current.value.length === 0 ? alert('Enter phone number!'): phone = this.phone.current.value;\r\n        this.email.current.value.length === 0 ? alert('Enter email address!'): email = this.email.current.value;\r\n        this.inventoryType.current.value.length === 0 ? alert('Enter inventory type!'): inventoryType = this.inventoryType.current.value;\r\n        const id = this.props.idMaker;\r\n        \r\n        const body = {\r\n            warehouseName: warehouseName,\r\n            address_street: street,\r\n            city: city,\r\n            country: country,\r\n            postal_code:postalCode,\r\n            manager_name: managerName,\r\n            phone_num: phone,\r\n            email: email,\r\n            type: inventoryType,\r\n            warehouse_id: id\r\n        }\r\n        const baseUrl = 'http://localhost:8080';\r\n\r\n        fetch(`${baseUrl}/warehouses/${id}`, {\r\n\r\n            method:\"POST\",\r\n            headers:{\"Content-Type\" :\"application/json\"},\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        this.props.handleClose();\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{...flex, display: this.props.isOpen ? 'flex' : 'none'}}>\r\n                <div className='modal-layer' onClick={this.props.handleClose} style={modalLayer}>\r\n                    <img src=\"/Assets/Icons/Close.svg\" alt=\"close\"/></div>\r\n                <div className=\"form-container\" style={formModal}>\r\n                    <h1>Add a new storage location</h1>\r\n                    <form className=\"formModal\" onSubmit={this.submitHandler}>                       \r\n                        <label className=\"formModal__label\">\r\n                            Warehouse Name\r\n                            <input className=\"formModal__field\" type=\"text\" name=\"warehouseNameInput\" ref={this.warehouseName}/>\r\n                        </label>\r\n                        <div className=\"formModal__wrapper\">\r\n                            <div className=\"formModal__address\">\r\n                            Address\r\n                                <label className=\"formModal__label\">\r\n                                    Street Number & name\r\n                                    <input className=\"formModal__field\" type=\"text\" name=\"streetInput\" ref={this.street}/>\r\n                                </label>\r\n                                <label className=\"formModal__label\">\r\n                                    City\r\n                                    <input className=\"formModal__field\" type=\"text\" name=\"cityInput\" ref={this.city}/>\r\n                                </label>\r\n                                <label className=\"formModal__label\">\r\n                                    Country\r\n                                    <select className=\"formModal__field\" name=\"country\" ref={this.country} >\r\n                                        {\r\n                                             countryName.map((country,i) =>{\r\n                                                return(\r\n                                                <option key={i}>\r\n                                                     {country}\r\n                                                </option>\r\n                                             )\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                </label>\r\n                                <label className=\"formModal__label\">\r\n                                    Postal Code\r\n                                    <input className=\"formModal__field\" type=\"text\" name=\"postalCodeInput\" ref={this.postalCode}/>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"formModal__contactInfo\">\r\n                            Contact Information\r\n                                <label className=\"formModal__label\">\r\n                                    Warehouse Manager's Name\r\n                                    <input className=\"formModal__field\" type=\"text\" name=\"managerNameInput\" ref={this.managerName}/>\r\n                                </label>\r\n                                <label className=\"formModal__label\">\r\n                                    Phone Number\r\n                                    <input className=\"formModal__field\" type=\"text\" name=\"PhoneInput\" ref={this.phone}/>\r\n                                </label>\r\n                                <label className=\"formModal__label\">\r\n                                    Email Address\r\n                                    <input  className=\"formModal__field\" type=\"text\" name=\"emailInput\" ref={this.email}/>\r\n                                </label>\r\n                                <label className=\"formModal__label\">\r\n                                    Inventory type\r\n                                    <input className=\"formModal__field\" type=\"text\" name=\"InventoryTypeInput\" ref={this.inventoryType}/>                                      \r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <input className=\"formModal__button\" type=\"submit\" value=\"Save Location\"/>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    handleClose: PropTypes.func.isRequired,\r\n    isOpen: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n\r\nconst flex = {\r\n    position: 'fixed',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '100vw',\r\n    height: '100vh',\r\n    zIndex: 1,\r\n    overflow: 'hidden',\r\n    backgroundColor: 'rgba(57,57,57,0.6)',\r\n    top: '0',\r\n    left:'0'\r\n};\r\n\r\nconst modalLayer = {\r\n    position: 'fixed',\r\n    width: '100vw',\r\n    height: '100vh',\r\n    zIndex: 1,\r\n    backgroundColor: 'transparent',\r\n    top: '0',\r\n    left:'0'\r\n  };\r\n  \r\n  const formModal = {\r\n    position: 'absolute',\r\n    color: 'rgb(57,57,57)',\r\n    backgroundColor: '#FFFFFF',\r\n    width: '600px',\r\n    maxWidth: '100%',\r\n    height: '600px',\r\n    maxHeight: '100%',\r\n    zIndex: 2,\r\n    borderRadius: '3px',\r\n    overflow: 'auto',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  };","import React from 'react';\r\nimport WarehouseChild from './WarehouseChild';\r\nimport { Link } from 'react-router-dom';\r\nimport Modal from './Modal';\r\nconst baseUrl = 'http://localhost:8080';\r\nconst warehousesPath = '/warehouses';\r\n\r\nexport default class Warehouses extends React.Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            warehouses: [],\r\n            isOpen: false, \r\n        }\r\n\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.idMaker = this.idMaker.bind(this);\r\n        this.fetchRequest = this.fetchRequest.bind(this);\r\n    }\r\n    \r\n\r\n    handleClose = (e) => {\r\n        this.setState({isOpen : !this.state.isOpen})\r\n    }\r\n\r\n    idMaker = (e) => {\r\n        return this.state.warehouses.length+1\r\n    }\r\n\r\n    fetchRequest = (e) => {\r\n        fetch(baseUrl + warehousesPath)\r\n        .then((response) => {\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n            return this.setState({warehouses: data})\r\n        })\r\n        .catch( (err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    componentDidMount(prevProps, prevState) {\r\n        this.fetchRequest(); \r\n        this.idMaker();\r\n    }\r\n  \r\n    componentDidUpdate(prevProps, prevState)\r\n    {\r\n        if(prevState.warehouses !== this.state.warehouses)\r\n        {\r\n            this.fetchRequest();\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        \r\n        let warehouseList = this.state.warehouses;\r\n\r\n        return (\r\n\r\n    <div className=\"warehouses\">\r\n        <div className=\"warehouses__header\">\r\n            <h3 className=\"warehouses__header--upperLeft\">\r\n            Locations\r\n            </h3>\r\n            <div className=\"warehouses__header--lowerRight\">\r\n            Filter\r\n            </div>\r\n        </div>\r\n        <div className=\"warehouses__grid\">\r\n            {warehouseList.map((warehouses, index) => {\r\n                return <Link key={index} to={`/warehouses/${warehouses.warehouse_id}`}>\r\n                    <WarehouseChild \r\n                        wareState={this.state.warehouses}\r\n                        key={index}\r\n                        wareId={warehouses.warehouse_id}\r\n                        wareCity={warehouses.city}\r\n                        wareCountry={warehouses.country}\r\n                        wareAddress={warehouses.address_street}\r\n                        warePostalCode={warehouses.postal_code}\r\n                        wareManager={warehouses.manager_name}\r\n                        warePhone={warehouses.phone_num}\r\n                        wareType={warehouses.type}\r\n                        wareMail={warehouses.email}\r\n                    /></Link>\r\n                })  \r\n  \r\n            }\r\n            \r\n        </div>\r\n        \r\n        <Modal handleClose = {this.handleClose} \r\n                isOpen={this.state.isOpen} \r\n                idMaker={this.idMaker()}\r\n                // warehouse_id = {this.id}\r\n                fetchRequest = {this.fetchRequest} />\r\n\r\n        <div className=\"warehouses__addButton\">\r\n            <img src=\"/Assets/Icons/add.svg\" alt=\"Add button\" onClick ={this.handleClose} />\r\n            \r\n        </div>\r\n    </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class ProductDetail extends React.Component {\r\n\r\n        // Monitor State\r\n        state = {\r\n            inventoryObject: {}\r\n        }\r\n    \r\n        componentDidMount (prevProps, prevState) {\r\n            const targetId = this.props.productId;  \r\n            let baseURL = 'http://localhost:8080';\r\n            let prodData = '/inventory'; \r\n\r\n            fetch (baseURL+prodData+'/'+targetId)\r\n            .then ((response) => {\r\n                return response.json();\r\n            }).then((data) => {\r\n                // console.log(data);\r\n                this.setState({\r\n                    inventoryObject: data,\r\n              })\r\n            }).catch((err) => {\r\n                console.error(\"You've encountered an error with the fetch: \", err);\r\n            });\r\n            }\r\n\r\n        \r\n    \r\n        \r\n\r\n    render() {\r\n\r\n        let prodObj = this.state.inventoryObject;\r\n        // console.log(prodObj);\r\n\r\n        return (\r\n\r\n            <div className=\"productDetail\">\r\n                <div className=\"invRecordsNav\">\r\n                    <div className=\"backLink\">\r\n                        <Link to={\"/inventory\"}><img src=\"../Assets/Icons/Back Arrow.svg\" alt=\"back arrow\" />Back to All Inventory</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"invRecords\">\r\n                    <div className=\"invRecordsBox\">\r\n                        <div className=\"invRecordsBox__names\">\r\n                            <div className=\"name\">\r\n                                {prodObj.name}\r\n                            </div>\r\n                            <div className=\"buttonBox\">\r\n                                <span>New Order</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"invRecordsBox__items\">\r\n                            <span>DESCRIPTION:</span> {prodObj.description}\r\n                        </div>\r\n                        <div className=\"invRecordsBox__items\">\r\n                        <span>LAST ORDERED:</span>  {prodObj.last_ordered}\r\n                        </div>\r\n                        <div className=\"invRecordsBox__items\">\r\n                        <span>ORDERED BY:</span>  {prodObj.ordered_by}\r\n\r\n                        </div>\r\n                        <div className=\"invRecordsBox__items\">\r\n                        <span>REFERENCE NUMBER:</span>  {prodObj.refNum}\r\n\r\n                        </div>\r\n                        <div className=\"invRecordsBox__items\">\r\n                        <span>PRODUCT CATEGORY:</span>  {prodObj.category}\r\n\r\n                        </div>\r\n                        <div className=\"invRecordsBox__items\">\r\n                        <span>QUANTITY:</span>  {prodObj.quantity}\r\n\r\n                        </div>\r\n                        <div className=\"invRecordsBox__items\">\r\n                        <span>LOCATION:</span>  {prodObj.location}\r\n\r\n                        </div>\r\n                        <div className=\"invRecordsBox__items\">\r\n                        <span>STATUS:</span> {prodObj.status}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './css/master.css';\r\nimport TopBar from './TopBar';\r\nimport Sidebar from './Sidebar';\r\nimport InventoryList from './InventoryList';\r\nimport Warehouses from './Warehouses';\r\nimport ProductDetail from './ProductDetail';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect,} from 'react-router-dom';\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n    <div>\r\n      <Router>\r\n        {/* We should give the Sidebar className sidebar or leftSide */}\r\n          <div className=\"\">\r\n            <Sidebar />\r\n            {/* We should give the right side that holds TopBar & the main routes className rightSide or something similar */}\r\n          <div className=''>\r\n            <TopBar />\r\n            <div className=\"main\">\r\n            <Switch>\r\n                <Route path=\"/warehouses\" exact component={Warehouses}  />\r\n                <Route path=\"/inventory\" exact component={InventoryList} />\r\n                <Route path=\"/warehouses/:id\" exact render={ (props) => { return <InventoryList warehouseId={props.match.params.id} />}} />\r\n                <Route path=\"/inventory/:id\" exact render={ (props) => { return <ProductDetail productId={props.match.params.id} />}} />\r\n                <Route exact path=\"/\" render={() =><Redirect to='/warehouses'/>} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n     </div>\r\n    );\r\n  }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}